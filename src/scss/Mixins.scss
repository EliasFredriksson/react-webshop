// ################## Mixins.scss ##################
@use "Variables" as Vars;
@use "./Colors.scss" as Colors;

// ########## BREAKPOINTS ##########
@mixin breakpoint-mobile {
    @media screen and (min-width: Vars.$breakpoint-mobile) {
        @content;
    }
}
@mixin breakpoint-tablet {
    @media screen and (min-width: Vars.$breakpoint-tablet) {
        @content;
    }
}
@mixin breakpoint-desktop {
    @media screen and (min-width: Vars.$breakpoint-desktop) {
        @content;
    }
}
@mixin breakpoint-desktop-large {
    @media screen and (min-width: Vars.$breakpoint-desktop-large) {
        @content;
    }
}

// ########### BASE STYLING ###########
@mixin display-flex($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    @content;
}

@mixin position(
    $position: relative,
    $top: none,
    $left: none,
    $bottom: none,
    $right: none
) {
    position: $position;
    @if ($top != none) {
        top: $top;
    }
    @if ($left != none) {
        left: $left;
    }
    @if ($bottom != none) {
        bottom: $bottom;
    }
    @if ($right != none) {
        right: $right;
    }
}

// ########### STYLINGS ###########
@mixin button-square(
    $size,
    $verticalOffset: 0px,
    $color: white,
    $background: rgba(black, 0)
) {
    height: $size;
    width: $size;
    font-size: calc($size * 0.7);
    border-radius: calc($size * 0.2);
    color: $color;

    text-align: center;
    padding-bottom: calc($size + $verticalOffset);

    text-shadow: 0px 0px calc($size * 0.1) black;
    background-color: $background;
    text-decoration: none;
    @content;
    @include hover-effect(white, white, none, none, 90%, 1.1);
}

@mixin search-bar() {
    @include display-flex();
    pointer-events: none;
    width: 100%;
    transition: 500ms ease;
    @content;

    input {
        padding: Vars.$spacing-small;
        font-size: Vars.$font-size-small;
        font-family: Vars.$font-family-default;
        border: none;
        pointer-events: all;
        transition: 500ms ease;
        max-width: 100%;
        min-width: 0px;

        &:focus {
            outline: none;
        }
    }
    input[type="text"] {
        flex-grow: 1;
        position: relative;
        border-top-left-radius: Vars.$border-radius-small;
        border-bottom-left-radius: Vars.$border-radius-small;
        letter-spacing: 1px;
    }

    button[type="submit"] {
        border: none;
        transition: 200ms ease;
        pointer-events: all;
        border-top-right-radius: Vars.$border-radius-small;
        border-bottom-right-radius: Vars.$border-radius-small;
        background-color: Colors.$accent-three;
        color: white;
        font-size: Vars.$font-size-medium;

        @include display-flex(row, center, center);

        &:hover {
            cursor: pointer;
            filter: brightness(120%);
            box-shadow: 0px 0px 5px 0px Colors.$accent-two;
        }
        span {
            width: 50px;
            pointer-events: none;
            display: inline-block;
            transform: rotate(-45deg);
        }
    }
}

@mixin hover-effect(
    $text-color: rgba(white, 1),
    $glow-color: rgba(white, 1),
    $underline-color: rgba(white, 0),
    $underline-glow-color: rgba(white, 0),
    $underline-width: 0%,
    $scale: 1,
    $translateY: 0px,
    $translateX: 0px,
    $speed: 300ms
) {
    // position: relative;
    transition: $speed ease;
    text-align: center;
    @content;
    &:hover {
        text-shadow: 0px 0px 5px $glow-color;
        color: $text-color;
        filter: brightness(115%);
        transform: scale($scale) translate($translateX, $translateY);
        cursor: pointer;
        @content;

        &::after {
            width: $underline-width;
            left: calc((100% - $underline-width) / 2);
        }
    }

    &:active {
        transform: scale(calc($scale * 1.1)) translate($translateX, $translateY);
    }

    &::after {
        @if ($underline-width == 0%) {
            display: none;
        }
        transition: calc($speed * 0.5) ease;
        position: absolute;
        bottom: 15%;
        left: 50%;
        content: " ";
        width: 0%;
        height: 2px;
        background-color: $underline-color;
        box-shadow: 0px 0px 5px $underline-glow-color;
    }
}

@mixin loader() {
    --speed: 3000ms;
    margin-top: 100px;

    @include spinner(
        100px,
        5px,
        var(--speed),
        Colors.$accent-two,
        rgba(#fff, 0)
    );

    &::after {
        content: " ";
        @include position(absolute);
        @include spinner(
            90px,
            5px,
            var(--speed),
            Colors.$accent-two,
            rgba(#fff, 0)
        );
    }
    &::before {
        content: " ";
        @include position(absolute);
        @include spinner(
            80px,
            5px,
            calc(var(--speed) / 2),
            Colors.$accent-two,
            rgba(#fff, 0)
        );
    }
}

@mixin spinner(
    $size: 50px,
    $thickness: 5px,
    $speed: 1000ms,
    $accent: Colors.$accent-two,
    $color: Colors.$primary-one
) {
    height: $size;
    width: $size;

    @include display-flex(row, center, center);

    border-radius: 50%;

    border-top: $thickness solid $color;
    border-right: $thickness solid $color;
    border-left: $thickness solid $color;
    border-bottom: $thickness solid $accent;

    animation: loader-spin $speed linear infinite;

    @keyframes loader-spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }
}

@mixin movie {
    --movie-padding: 8px;
    --poster-width: 270px;
    --poster-height: calc(var(--poster-width) * 1.48);

    @include display-flex(column, flex-start, center);

    position: relative;

    padding: var(--movie-padding);
    width: var(--poster-width);
    height: var(--poster-height);
    border-radius: Vars.$border-radius-small;
    overflow: hidden;
    z-index: 0;
    @content;

    @include hover-effect(none, none, none, none, 0%, 1.05, 0px, 0px, 500ms);

    &:hover {
        @include breakpoint-tablet {
            .__info {
                opacity: 1;
                transform: translateX(0%);
                @content;
            }
            .__poster {
                box-shadow: inset 0px -80px 30px -30px rgba(#000, 0.8);
            }
        }
    }

    .__poster {
        min-height: 0px;
        width: 100%;
        flex-grow: 1;
        transition: 500ms ease;
        box-shadow: inset 0px -80px 30px -30px rgba(#000, 0.8);
        @include display-flex(row, center, center);
        @content;

        @include breakpoint-tablet {
            box-shadow: none;
            @content;
        }

        img {
            position: relative;
            box-shadow: 0px 0px 5px 0px black;
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            z-index: -1;
            @content;
        }
    }

    .__info {
        pointer-events: none;
        position: absolute;
        bottom: 10%;
        font-size: Vars.$font-size-small;
        color: white;
        text-shadow: 0px 0px 10px black;
        width: 80%;
        transition: 500ms ease;
        @content;

        @include breakpoint-tablet {
            opacity: 0;
            transform: translateX(100%);
            @content;
        }
    }

    &.fade-in {
        transform: translateY(20px) scale(0.6);
        opacity: 0;
    }
}
